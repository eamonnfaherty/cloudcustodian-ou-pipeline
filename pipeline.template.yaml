Parameters:
  Owner:
    Type: String
    Description: 'The owner of the github repo: https://github.com/OWNER/repo'
  Repo:
    Type: String
    Description: 'The repo : https://github.com/owner/REPO'
  Branch:
    Type: String
    Description: The branch of the github repo
  Token:
    Type: String
    Description: The OAuth token to use to gain access to the repo
  C7NVersion:
    Type: String
    Description: Version of c7n to use
  C7NOrgVersion:
    Type: String
    Description: Version of c7n-org to use
Resources:
  CloudCustodianArtifactsBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
  CloudCustodianRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: 2012-10-17
  CloudCustodianRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject*'
              - 's3:GetBucket*'
              - 's3:List*'
              - 's3:DeleteObject*'
              - 's3:PutObject*'
              - 's3:Abort*'
            Effect: Allow
            Resource:
              - !GetAtt
                - CloudCustodianArtifactsBucket
                - Arn
              - !Join
                - ''
                - - !GetAtt
                    - CloudCustodianArtifactsBucket
                    - Arn
                  - /*
          - Action: 'iam:PassRole'
            Effect: Allow
            Resource: !GetAtt
              - GeneratePipelineChangeSetRole
              - Arn
          - Action:
              - 'cloudformation:CreateChangeSet'
              - 'cloudformation:DeleteChangeSet'
              - 'cloudformation:DescribeChangeSet'
              - 'cloudformation:DescribeStacks'
            Condition:
              StringEqualsIfExists:
                'cloudformation:ChangeSetName': pipelineChangeSet
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:'
                - !Ref 'AWS::Partition'
                - ':cloudformation:'
                - !Ref 'AWS::Region'
                - ':'
                - !Ref 'AWS::AccountId'
                - ':stack/'
                - !Ref 'AWS::StackName'
                - /*
          - Action: 'cloudformation:ExecuteChangeSet'
            Condition:
              StringEquals:
                'cloudformation:ChangeSetName': pipelineChangeSet
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:'
                - !Ref 'AWS::Partition'
                - ':cloudformation:'
                - !Ref 'AWS::Region'
                - ':'
                - !Ref 'AWS::AccountId'
                - ':stack/'
                - !Ref 'AWS::StackName'
                - /*
          - Action:
              - 'codebuild:BatchGetBuilds'
              - 'codebuild:StartBuild'
              - 'codebuild:StopBuild'
            Effect: Allow
            Resource: !GetAtt
              - c7nValidateProject
              - Arn
          - Action:
              - 'codebuild:BatchGetBuilds'
              - 'codebuild:StartBuild'
              - 'codebuild:StopBuild'
            Effect: Allow
            Resource: !GetAtt
              - c7nDeployProject
              - Arn
        Version: 2012-10-17
      PolicyName: CloudCustodianRoleDefaultPolicy
      Roles:
        - !Ref CloudCustodianRole
  CloudCustodian:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt
        - CloudCustodianRole
        - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref Owner
                Repo: !Ref Repo
                Branch: !Ref Branch
                OAuthToken: !Ref Token
                PollForSourceChanges: false
              InputArtifacts: []
              Name: clone
              OutputArtifacts:
                - Name: source
              RunOrder: 1
          Name: CloneStage
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                StackName: !Ref 'AWS::StackName'
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: pipelineChangeSet
                TemplatePath: 'source::pipeline.template.yaml'
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt
                  - GeneratePipelineChangeSetRole
                  - Arn
                ParameterOverrides: !Join
                  - ''
                  - - '{"Owner":"'
                    - !Ref Owner
                    - '","Repo":"'
                    - !Ref Repo
                    - '","Branch":"'
                    - !Ref Branch
                    - '","Token":"'
                    - !Ref Token
                    - '","C7NVersion":"'
                    - !Ref C7NVersion
                    - '","C7NOrgVersion":"'
                    - !Ref C7NOrgVersion
                    - '"}'
              InputArtifacts:
                - Name: source
              Name: GeneratePipelineChangeSet
              OutputArtifacts: []
              RunOrder: 1
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              InputArtifacts: []
              Name: ApprovePipelineChangeSet
              OutputArtifacts: []
              RunOrder: 2
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                StackName: !Ref 'AWS::StackName'
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipelineChangeSet
              InputArtifacts: []
              Name: ApplyPipelineChangeSet
              OutputArtifacts: []
              RunOrder: 3
          Name: UpdatePipeline
        - Actions:
            - ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref c7nValidateProject
              InputArtifacts:
                - Name: source
              Name: c7nValidateAction
              OutputArtifacts: []
              RunOrder: 1
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              InputArtifacts: []
              Name: ApproveC7NPolicies
              OutputArtifacts: []
              RunOrder: 2
          Name: c7nValidateStage
        - Actions:
            - ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref c7nDeployProject
              InputArtifacts:
                - Name: source
              Name: c7nDeployToOrgAction
              OutputArtifacts: []
              RunOrder: 1
          Name: c7nDeployStage
      ArtifactStore:
        Location: !Ref CloudCustodianArtifactsBucket
        Type: S3
      RestartExecutionOnUpdate: true
    DependsOn:
      - CloudCustodianRole
      - CloudCustodianRoleDefaultPolicy
  CustodianMasterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      RoleName: CustodianMasterRole
  CustodianMasterRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:/aws/codebuild/'
                  - !Ref c7nDeployProject
              - !Join
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:/aws/codebuild/'
                  - !Ref c7nDeployProject
                  - ':*'
          - Action:
              - 's3:GetObject*'
              - 's3:GetBucket*'
              - 's3:List*'
            Effect: Allow
            Resource:
              - !GetAtt
                - CloudCustodianArtifactsBucket
                - Arn
              - !Join
                - ''
                - - !GetAtt
                    - CloudCustodianArtifactsBucket
                    - Arn
                  - /*
        Version: 2012-10-17
      PolicyName: CustodianMasterRoleDefaultPolicy
      Roles:
        - !Ref CustodianMasterRole
  CustodianSpokeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      RoleName: CustodianSpokeRole
  cloneWebhookResource:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref Token
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
      TargetAction: clone
      TargetPipeline: !Ref CloudCustodian
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true
  GeneratePipelineChangeSetRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: 2012-10-17
  GeneratePipelineChangeSetRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
        Version: 2012-10-17
      PolicyName: GeneratePipelineChangeSetRoleDefaultPolicy
      Roles:
        - !Ref GeneratePipelineChangeSetRole
  c7nValidateProjectRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: 2012-10-17
  c7nValidateProjectRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:/aws/codebuild/'
                  - !Ref c7nValidateProject
              - !Join
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:/aws/codebuild/'
                  - !Ref c7nValidateProject
                  - ':*'
          - Action:
              - 's3:GetObject*'
              - 's3:GetBucket*'
              - 's3:List*'
            Effect: Allow
            Resource:
              - !GetAtt
                - CloudCustodianArtifactsBucket
                - Arn
              - !Join
                - ''
                - - !GetAtt
                    - CloudCustodianArtifactsBucket
                    - Arn
                  - /*
        Version: 2012-10-17
      PolicyName: c7nValidateProjectRoleDefaultPolicy
      Roles:
        - !Ref c7nValidateProjectRole
  c7nValidateProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/python:2.7.12'
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt
        - c7nValidateProjectRole
        - Arn
      Source:
        BuildSpec: !Join
          - ''
          - - |-
              {
                "version": "0.2",
                "phases": {
                  "install": {
                    "commands": [
                      "pip install c7n==
            - !Ref C7NVersion
            - |-
              "
                    ]
                  },
                  "build": {
                    "commands": [
                      "custodian validate policies/*"
                    ]
                  }
                }
              }
        Type: NO_SOURCE
  c7nDeployProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/python:2.7.12'
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt
        - CustodianMasterRole
        - Arn
      Source:
        BuildSpec: !Join
          - ''
          - - |-
              {
                "version": "0.2",
                "phases": {
                  "install": {
                    "commands": [
                      "pip install c7n==
            - !Ref C7NVersion
            - |-
              ",
                      "pip install c7n-org==
            - !Ref C7NOrgVersion
            - |-
              "
                    ]
                  },
                  "build": {
                    "commands": [
                      "curl -L https://github.com/capitalone/cloud-custodian/archive/
            - !Ref C7NVersion
            - |-
              .zip -o c7n.zip",
                      "unzip c7n.zip",
                      "python cloud-custodian-
            - !Ref C7NVersion
            - >-
              /tools/c7n_org/scripts/orgaccounts.py -f accounts.yml --role
              arn:aws:iam::{Id}:role/CustodianSpokeRole",
                      "cat accounts.yml",
                      "find policies -name '*.yaml' | sed 's/^/c7n-org run -c accounts.yml -s output -u /g' | sh"
                    ]
                  }
                },
                "artifacts": {
                  "base-directory": "output",
                  "files": "**/*"
                }
              }
        Type: NO_SOURCE
